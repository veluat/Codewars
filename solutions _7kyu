/* Sort Numbers

Finish the solution so that it sorts the passed in array of numbers. 
If the function passes in an empty array or null/nil value then it 
should return an empty array.

For example:

solution([1, 2, 10, 50, 5]); // should return [1,2,5,10,50]
solution(null); // should return []
*/

//Solution:

function solution(nums){
  return nums == null || nums == [] ? [] 
  : nums.sort((a,b) => a - b);
}

/List Filtering

function filter_list(l) {
  return l.filter(elem => typeof elem != "string");
}

/Summing a number's digits

function sumDigits(number) {
  let arr = Math.abs(number).toString().split('');
  return arr.reduce((sum, elem) => +sum + +elem, 0);
}

//Form The Minimum

function minValue(values){
  let result = [];
  for (let elem of values) {
  if (!result.includes(elem)) {
    result.push(elem);
  }
}
  result = result.sort((a,b) => a - b).join('');
  return Number(result);
}

//Binary Addition

function addBinary(a,b) {
  let n = a + b;
  return n.toString(2);
}
